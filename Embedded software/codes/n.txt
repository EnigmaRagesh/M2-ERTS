ldr r0, adr_var1  @ load the memory address of var1 via label adr_var1 into R0

ldr r1, adr_var2  @ load the memory address of var2 via label adr_var2 into R1

ldr r2, [r0]      @ load the value (0x03) at memory address found in R0 to register R2 

str r2, [r1, #2]  @ address mode: offset. Store the value found in R2 (0x03) to the memory address found in R1 plus 2. Base register (R1) unmodified. 

str r2, [r1, #4]! @ address mode: pre-indexed. Store the value found in R2 (0x03) to the memory address found in R1 plus 4. Base register (R1) modified: R1 = R1+4 

ldr r3, [r1], #4  @ address mode: post-indexed. Load the value at memory address found in R1 to register R3. Base register (R1) modified: R1 = R1+4 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
ldr r0, adr_var1         @ load the memory address of var1 via label adr_var1 to R0

ldr r1, adr_var2         @ load the memory address of var2 via label adr_var2 to R1

ldr r2, [r0]             @ load the value (0x03) at memory address found in R0 to R2

str r2, [r1, r2, LSL#2]  @ address mode: offset. Store the value found in R2 (0x03) 
						to the memory address found in R1 with the offset R2 left-shifted by 2. Base register (R1) unmodified.

str r2, [r1, r2, LSL#2]! @ address mode: pre-indexed. Store the value found in R2 (0x03)
						 to the memory address found in R1 with the offset R2 left-shifted by 2. Base register modified: R1 = R1 + R2<<2
						 
ldr r3, [r1], r2, LSL#2  @ address mode: post-indexed. Load value at memory address found
						 in R1 to the register R3. Then modifiy base register: R1 = R1 + R2<<2
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

ldr r0, adr_var1  @ load the memory address of var1 via label adr_var1 to R0 

ldr r1, adr_var2  @ load the memory address of var2 via label adr_var2 to R1 

ldr r2, [r0]      @ load the value (0x03) at memory address found in R0 to R2

str r2, [r1, r2]  @ address mode: offset. Store the value found in R2 (0x03) to the memory address found in R1 with the offset R2 (0x03). Base register unmodified.   

str r2, [r1, r2]! @ address mode: pre-indexed. Store value found in R2 (0x03) to the memory address found in R1 with the offset R2 (0x03). Base register modified: R1 = R1+R2. 

ldr r3, [r1], r2  @ address mode: post-indexed. Load value at memory address found in R1 to register R3. Then modify base register: R1 = R1+R2.



